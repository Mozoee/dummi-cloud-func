# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  PROJECT: fifth-sunup-329021
  SUBSCRIPTION_NAME: bau-sub-error

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{env.PROJECT}}
          service_account_key: ${{ secrets.GCP_SA }}
          export_default_credentials: true
          
         
      - name: Deploy cloud func  
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@v0.6.0
        with:
          name: readMessage
          runtime: nodejs14
          source_dir: ./dist/
          env_vars: projectId='${{env.PROJECT}}',subscriptionName='${{ env.SUBSCRIPTION_NAME }}',credentials='${{ secrets.GCP_SA }}'

      
      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: '${{ secrets.TF_API_TOKEN }}'
          
      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init 
     
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        env: 
          TF_VAR_GCP_SA: '${{ secrets.GCP_SA }}'
          TF_VAR_funcurl: '${{ steps.deploy.outputs.url }}'

        # On push to main, build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false
        env: 
          TF_VAR_GCP_SA: '${{ secrets.GCP_SA }}'
          TF_VAR_funcurl: '${{ steps.deploy.outputs.url }}'
